##Our Working Directory
setwd("D:/Research/SAARC paper")
getwd()
##Required libraries
library(readxl)
library(dplyr)
library(imputeTS)
library(forecast)
library(ggplot2)
library(gridExtra)
library(TSstudio)
library(lmtest)
##Afghanistan
Afg<-read_excel("SAARC_COVID-19_data.xlsx", sheet = "Afghanistan")
head(Afg)
Afgts<-ts(Afg$Cases,start=c(2020,55),frequency=365)
p1<-autoplot(Afgts,col="green")+ylab("Confirmed cases")+xlab("")+theme_bw()+ggtitle("A: Afghanistan");p1
##Removing 0 values by NA
Afg$Cases[Afg$Cases==0]<-NA
head(Afg)
##Cross-correlation
c1<-Ccf(Afg$Cases,Afg$T2M_MAX, main="Afghanistan: Cases vs. Max. temperature");c1
c2<-Ccf(Afg$Cases,Afg$T2M_MIN, main="Afghanistan: Cases vs. Min. temperature");c2
c3<-Ccf(Afg$Cases,Afg$RH2M, main="Afghanistan: Cases vs. Relative Humidity");c3
c4<-Ccf(Afg$Cases,Afg$PS, main="Afghanistan: Cases vs. Surface Pressure");c4
c5<-Ccf(Afg$Cases,Afg$WS10M_MAX, main="Afghanistan: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(Afg$Cases,Afg$PRECTOTCORR, main="Afghanistan: Cases vs. Precipitation");c6
##Lagged variable
max_temp<-dplyr::lag((Afg$T2M_MAX),n=0)
sp<-dplyr::lag((Afg$PS),n=24)
min_temp<-dplyr::lag((Afg$T2M_MIN),n=0)
pre<-dplyr::lag((Afg$PRECTOTCORR),n=2)
afg<-data.frame(Afg$Cases,min_temp,Afg$T2M,max_temp,sp,pre,Afg$RH2M,Afg$WS10M_MAX)
## 90% of the sample size
smp_size<-floor(0.9 * nrow(afg))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(afg)),size = smp_size)
train<-afg[1:smp_size,]
test <-afg[smp_size+1:nrow(afg),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(Relative_humidity=train$Afg.RH2M,
              Minimum_Temp=train$min_temp,
              Maximum_Temp=train$max_temp,
              Surface_pressure=train$sp,
              Precipitation=train$pre,
              wind_speed=train$Afg.WS10M_MAX
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(Relative_humidity=test$Afg.RH2M,
               Minimum_Temp=test$min_temp,
               Maximum_Temp=test$max_temp,
               Surface_pressure=test$sp,
               Precipitation=test$pre,
               wind_speed=test$Afg.WS10M_MAX
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$Afg.Cases,start=c(2020,55),frequency=365)
casesafg<-na_locf(Cases)
ts_info(casesafg)
Casestest<-ts(test$Afg.Cases,start=c(2021,325),frequency=365)
##Fitting ARIMAX
m1<-auto.arima(casesafg, xreg=xreg)
m1
coeftest(m1)
confint(m1,level=0.95)
##Prediction with ARIMAX using significant factors
x<-cbind(temp=train$Afg.T2M,
         Minimum_temp=train$min_temp,
         Maximum_temp=train$max_temp
)
x1<-cbind(temp=test$Afg.T2M,
          Minimum_temp=test$min_temp,
          Maximum_temp=test$max_temp
)
x<-x[,-1]
fm1<-auto.arima(casesafg,xreg=x)
fm1
x1<-x1[,-1]
fc<-forecast(fm1,nrow(test),xreg=x1)
fc
accuracy(fc,Casestest)
f1<-autoplot(casesafg,series="Actual")+autolayer(fc, series="Forecast")+autolayer(fitted(fc), series="Fitted")+
  ylab("Confirmed cases")+ggtitle("A: Afghanistan")+theme_bw();f1

#Bangladesh
Bd<-read_excel("SAARC.xlsx", sheet = "Bangladesh")
head(Bd)
Bdts<-ts(Bd$Cases,start=c(2020,66),frequency=365)
p2<-autoplot(Bdts,col="purple")+ylab("")+xlab("")+theme_bw()+ggtitle("B: Bangladesh");p2
##Removing 0 values by NA
Bd$Cases[Bd$Cases==0]<-NA
head(Bd)
##Cross-correlation
c1<-Ccf(Bd$Cases,Bd$T2M_MAX, main="Bangladesh: Cases vs. Max. temperature");c1
c2<-Ccf(Bd$Cases,Bd$T2M_MIN, main="Bangladesh: Cases vs. Min. temperature");c2
c3<-Ccf(Bd$Cases,Bd$RH2M, main="Bangladesh: Cases vs. Relative Humidity");c3
c4<-Ccf(Bd$Cases,Bd$PS, main="Bangladesh: Cases vs. Surface Pressure");c4
c5<-Ccf(Bd$Cases,Bd$WS10M_MAX, main="Bangladesh: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(Bd$Cases,Bd$PRECTOTCORR, main="Bangladesh: Cases vs. Precipitation");c6
#ARIMAX Modeling
##Lagged variable
max_temp<-dplyr::lag((Bd$T2M_MAX),n=4)
RH<-dplyr::lag((Bd$RH2M),n=0)
sp<-dplyr::lag((Bd$PS),n=28)
ws<-dplyr::lag((Bd$WS10M_MAX),n=5)
min_temp<-dplyr::lag((Bd$T2M_MIN),n=0)
pre<-dplyr::lag((Bd$PRECTOTCORR),n=27)
bd<-data.frame(Bd$Cases,min_temp,Bd$T2M,max_temp,sp,RH,ws,pre)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(bd))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(bd)),size = smp_size)
train<-bd[1:smp_size,]
test <-bd[smp_size+1:nrow(bd),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(temp=train$Bd.T2M,
              Minimum_Temp=train$min_temp,
              Maximum_Temp=train$max_temp,
              Surface_pressure=train$sp,
              Wind_speed=train$ws,
              Rl_hdty=train$RH,
              precipitation=train$pre
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(temp=test$Bd.T2M,
               Minimum_Temp=test$min_temp,
               Maximum_Temp=test$max_temp,
               Surface_pressure=test$sp,
               Wind_speed=test$ws,
               Rl_hdty=test$RH,
               precipitation=test$pre
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$Bd.Cases,start=c(2020,66),frequency=365)
casesbd<-na_locf(Cases)
ts_info(casesbd)
Casestest<-ts(test$Bd.Cases,start=c(2021,324),frequency=365)
##Fitting ARIMAX
m2<-auto.arima(casesbd, xreg=xreg)
m2
coeftest(m2)
confint(m2,level=0.95)
##Forecasting with significant factors
fm2<-auto.arima(casesbd,xreg=train$max_temp)
fm2
fc2<-forecast(fm2,nrow(test),xreg=test$max_temp)
fc2
accuracy(fc2,Casestest)
f2<-autoplot(casesbd,series="Actual")+autolayer(fc2, series="Forecast")+autolayer(fitted(fc2), series="Fitted")+ylab("")+
  theme_bw()+ggtitle("B: Bangladesh");f2


##Bhutan
Bh<-read_excel("SAARC_COVID-19_data.xlsx", sheet = "Bhutan")
head(Bh)
Bhts<-ts(Bh$Cases,start=c(2020,64),frequency=365)
p3<-autoplot(Bhts,col="blue")+ylab("Confirmed cases")+xlab("")+theme_bw()+ggtitle("C: Bhutan");p3
##Removing 0 values by NA
Bh$Cases[Bh$Cases==0]<-NA
head(Bh)
#ARIMAX Modeling
##Cross-correlation
c1<-Ccf(Bh$Cases,Bh$T2M_MAX, main="Bhutan: Cases vs. Max. temperature");c1
c2<-Ccf(Bh$Cases,Bh$T2M_MIN, main="Bhutan: Cases vs. Min. temperature");c2
c3<-Ccf(Bh$Cases,Bh$RH2M, main="Bhutan: Cases vs. Relative Humidity");c3
c4<-Ccf(Bh$Cases,Bh$PS, main="Bhutan: Cases vs. Surface Pressure");c4
c5<-Ccf(Bh$Cases,Bh$WS10M, main="Bhutan: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(Bh$Cases,Bh$PRECTOTCORR,main="Bhutan: Cases vs. Precipitation");c6
##Lagged variable
max_temp<-dplyr::lag((Bh$T2M_MAX),n=6)
RH<-dplyr::lag((Bh$RH2M),n=26)
sp<-dplyr::lag((Bh$PS),n=15)
ws<-dplyr::lag((Bh$WS10M),n=15)
min_temp<-dplyr::lag((Bh$T2M_MIN),n=0)
pre<-dplyr::lag((Bh$PRECTOTCORR),n=23)
bh<-data.frame(Bh$Cases,min_temp,Bh$T2M,max_temp,sp,RH,pre)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(bh))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(bh)),size = smp_size)
train<-bh[1:smp_size,]
test <-bh[smp_size+1:nrow(bh),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(Temp=train$Bh.T2M,
              Minimum_Temp=train$min_temp,
              Maximum_Temp=train$max_temp,
              Surface_pressure=train$sp,
              Rl_hdty=train$RH,
              wind_speed=train$ws,
              precipitation=train$pre
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(Temp=test$Bh.T2M,
               Minimum_Temp=test$min_temp,
               Maximum_Temp=test$max_temp,
               Surface_pressure=test$sp,
               Rl_hdty=test$RH,
               wind_speed=test$ws,
               precipitation=test$pre
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$Bh.Cases,start=c(2020,64),frequency=365)
casesbh<-na_locf(Cases)
ts_info(casesbh)
Casestest<-ts(test$Bh.Cases,start=c(2021,324),frequency=365)
##Fitting ARIMAX
m3<-auto.arima(casesbh, xreg=xreg)
m3
coeftest(m3)
confint(m3,level=0.95)
##Forecasting with significant factors
fm3<-auto.arima(casesbh,xreg=train$RH)
fm3
fc3<-forecast(fm3,nrow(test),xreg=test$RH)
fc3
accuracy(fc3,Casestest)
f3<-autoplot(casesbh,series="Actual")+autolayer(fc3, series="Forecast")+autolayer(fitted(fc3), series="Fitted")+
  theme_bw()+ylab("Confirmed cases")+ggtitle("C: Bhutan");f3

##India
In<-read_excel("SAARC_COVID-19_data.xlsx", sheet = "India")
head(In)
Ints<-ts(In$Cases,start=c(2020,30),frequency=365)
p4<-autoplot(Ints,col="orange")+ylab("")+xlab("")+theme_bw()+ggtitle("D: India")+scale_y_continuous(labels = function(x) format(x, scientific = FALSE));p4
##Removing 0 values by NA
In$Cases[In$Cases==0]<-NA
head(In)
#ARIMAX Modeling
##Cross-correlation
c1<-Ccf(In$Cases,In$T2M_MAX, main="India: Cases vs. Max. temperature");c1
c2<-Ccf(In$Cases,In$T2M_MIN, main="India: Cases vs. Min. temperature");c2
c3<-Ccf(In$Cases,In$RH2M, main="India: Cases vs. Relative Humidity");c3
c4<-Ccf(In$Cases,In$PS, main="India: Cases vs. Surface Pressure");c4
c5<-Ccf(In$Cases,In$WS10M_MAX, main="India: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(In$Cases,In$PRECTOTCORR,main="India: Cases vs. Precipitation");c6
##LAgged variable
max_temp<-dplyr::lag((In$T2M_MAX),n=11)
RH<-dplyr::lag((In$RH2M),n=1)
sp<-dplyr::lag((In$PS),n=9)
ws<-dplyr::lag((In$WS10M),n=0)
min_temp<-dplyr::lag((In$T2M_MIN),n=0)
pre<-dplyr::lag((In$PRECTOTCORR),n=0)
ind<-data.frame(In$Cases,min_temp,In$T2M,max_temp,sp,RH,ws,pre)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(ind))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(ind)),size = smp_size)
train<-ind[1:smp_size,]
test <-ind[smp_size+1:nrow(ind),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(Temp=train$In.T2M,
              Minimum_Temp=train$min_temp,
              Maximum_Temp=train$max_temp,
              Surface_pressure=train$sp,
              Wind_speed=train$ws,
              Rl_hdty=train$RH,
              precipitation=train$pre
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(Temp=test$In.T2M,
               Minimum_Temp=test$min_temp,
               Maximum_Temp=test$max_temp,
               Surface_pressure=test$sp,
               Wind_speed=test$ws,
               Rl_hdty=test$RH,
               precipitation=test$pre
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$In.Cases,start=c(2020,30),frequency=365)
casesind<-na_locf(Cases)
ts_info(casesind)
Casestest<-ts(test$In.Cases,start=c(2021,322),frequency=365)
##Fitting ARIMAX
m4<-auto.arima(casesind, xreg=xreg,lambda=0.3)
m4
coeftest(m4)
confint(m4)
##Forecasting with significant factor
fm4<-auto.arima(casesind,xreg=train$max_temp,lambda=0.01)
fm4
fc4<-forecast(fm4,nrow(test),xreg=test$max_temp)
fc4
accuracy(fc4,Casestest)
f4<-autoplot(casesind,series="Actual")+autolayer(fc4, series="Forecast")+autolayer(fitted(fc4), series="Fitted")+theme_bw()+scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
  ylab("")+ggtitle("D: India");f4



##Maldives
Ma<-read_excel("SAARC.xlsx", sheet = "Maldives")
head(Ma)
Mats<-ts(Ma$Cases,start=c(2020,66),frequency=365)
p5<-autoplot(Mats,col="turquoise")+ylab("Confirmed cases")+xlab("")+theme_bw()+ggtitle("E: Maldives");p5
##Removing 0 values by NA
Ma$Cases[Ma$Cases==0]<-NA
head(Ma)
#ARIMAX Modeling
##Cross-correlation
c1<-Ccf(Ma$Cases,Ma$T2M_MAX, main="Maldives: Cases vs. Max. temperature");c1
c2<-Ccf(Ma$Cases,Ma$T2M_MIN, main="Maldives: Cases vs. Min. temperature");c2
c3<-Ccf(Ma$Cases,Ma$RH2M, main="Maldives: Cases vs. Relative Humidity");c3
c4<-Ccf(Ma$Cases,Ma$PS, main="Maldives: Cases vs. Surface Pressure");c4
c5<-Ccf(Ma$Cases,Ma$WS10M_MAX, main="Maldives: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(Ma$Cases,Ma$PRECTOTCORR,main="Maldives: Cases vs. Precipitation");c6
##Lagged variable
max_temp<-dplyr::lag((Ma$T2M_MAX),n=3)
RH<-dplyr::lag((Ma$RH2M),n=14)
sp<-dplyr::lag((Ma$PS),n=9)
ws<-dplyr::lag((Ma$WS10M_MAX),n=1)
min_temp<-dplyr::lag((Ma$T2M_MIN),n=2)
pre<-dplyr::lag((Ma$PRECTOTCORR),n=28)
ma<-data.frame(Ma$Cases,min_temp,Ma$T2M,sp,RH,ws,pre,max_temp)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(ma))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(ma)),size = smp_size)
train<-ma[1:smp_size,]
test <-ma[smp_size+1:nrow(ma),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(Temp=train$Ma.T2M,
              Minimum_Temp=train$min_temp,
              maximum_temp=train$max_temp,
              Surface_pressure=train$sp,
              Wind_speed=train$ws,
              Rl_hdty=train$RH,
              precipitation=train$pre
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(Minimum_Temp=test$min_temp,
               maximum_temp=test$max_temp,
               Surface_pressure=test$sp,
               Wind_speed=test$ws,
               Rl_hdty=test$RH,
               precipitation=test$pre
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$Ma.Cases,start=c(2020,66),frequency=365)
casesma<-na_locf(Cases)
ts_info(casesma)
Casestest<-ts(test$Ma.Cases,start=c(2021,324),frequency=365)
##Fitting ARIMAX
m5<-auto.arima(casesma, xreg=xreg)
m5
coeftest(m5)
confint(m5)
##Forecasting with significant factors
fm5<-auto.arima(casesma,xreg=train$sp)
fm5
fc5<-forecast(fm5,nrow(test),xreg=test$sp)
fc5
accuracy(fc5,Casestest)
f5<-autoplot(casesma,series="Actual")+autolayer(fc5, series="Forecast")+autolayer(fitted(fc5), series="Fitted")+
  theme_bw()+ylab("Confirmed cases")+ggtitle("E: Maldives");f5


##Nepal
Ne<-read_excel("SAARC.xlsx", sheet = "Nepal")
head(Ne)
Nets<-ts(Ne$Cases,start=c(2020,25),frequency=365)
p6<-autoplot(Nets,col="gold")+ylab("")+xlab("")+theme_bw()+ggtitle("F: Nepal");p6
##Removing 0 values by NA
Ne$Cases[Ne$Cases==0]<-NA
head(Ne)
#ARIMAX Modeling
##Cross-correlation
c1<-Ccf(Ne$Cases,Ne$T2M_MAX, main="Nepal: Cases vs. Max. temperature");c1
c2<-Ccf(Ne$Cases,Ne$T2M_MIN, main="Nepal: Cases vs. Min. temperature");c2
c3<-Ccf(Ne$Cases,Ne$RH2M, main="Nepal: Cases vs. Relative Humidity");c3
c4<-Ccf(Ne$Cases,Ne$PS, main="Nepal: Cases vs. Surface Pressure");c4
c5<-Ccf(Ne$Cases,Ne$WS10M_MAX, main="Nepal: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(Ne$Cases,Ne$PRECTOTCORR,main="Nepal: Cases vs. Precipitation");c6

##Lagged variable
max_temp<-dplyr::lag((Ne$T2M_MAX),n=1)
RH<-dplyr::lag((Ne$RH2M),n=0)
RH2<-dplyr::lag((Ne$RH2M),n=1)
sp<-dplyr::lag((Ne$PS),n=18)
ws<-dplyr::lag((Ne$WS10M),n=27)
min_temp<-dplyr::lag((Ne$T2M_MIN),n=0)
ne<-data.frame(Ne$Cases,min_temp,Ne$T2M,max_temp,sp,RH,ws,Ne$PRECTOTCORR,RH2)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(ne))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(ne)),size = smp_size)
train<-ne[1:smp_size,]
test <-ne[smp_size+1:nrow(ne),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(Temp=train$Ne.T2M,
              Minimum_Temp=train$min_temp,
              Maximum_Temp=train$max_temp,
              Surface_pressure=train$sp,
              Wind_speed=train$ws,
              Rl_hdty=train$RH,
              RH2<-train$RH2
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(Temp=test$Ne.T2M,
               Minimum_Temp=test$min_temp,
               Maximum_Temp=test$max_temp,
               Surface_pressure=test$sp,
               Wind_speed=test$ws,
               Rl_hdty=test$RH,
               RH2=test$RH2
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$Ne.Cases,start=c(2020,25),frequency=365)
casesne<-na_locf(Cases)
ts_info(casesne)
Casestest<-ts(test$Ne.Cases,start=c(2021,322),frequency=365)
##Fitting ARIMAX
m6<-auto.arima(casesne, xreg=xreg)
m6
coeftest(m6)
confint(m6)
##Forecasting with significant factors
fm6<-auto.arima(casesne,xreg=train$max_temp)
fm6
fc6<-forecast(fm6,nrow(test),xreg=test$max_temp)
fc6
accuracy(fc6,Casestest)
f6<-autoplot(casesne,series="Actual")+autolayer(fc6, series="Forecast")+autolayer(fitted(fc6), series="Fitted")+
  theme_bw()+ylab("")+ggtitle("F: Nepal");f6


##Pakistan
Pk<-read_excel("SAARC.xlsx", sheet = "Pakistan")
head(Pk)
Pkts<-ts(Pk$Cases,start=c(2020,56),frequency=365)
p7<-autoplot(Pkts,col="dark red")+ylab("Confirmed cases")+theme_bw()+ggtitle("G: Pakistan");p7
##Removing 0 values by NA
Pk$Cases[Pk$Cases==0]<-NA
head(Pk)
#ARIMAX Modeling
##Cross-correlation
c1<-Ccf(Pk$Cases,Pk$T2M_MAX, main="Pakistan: Cases vs. Max. temperature");c1
c2<-Ccf(Pk$Cases,Pk$T2M_MIN, main="Pakistan: Cases vs. Min. temperature");c2
c3<-Ccf(Pk$Cases,Pk$RH2M, main="Pakistan: Cases vs. Relative Humidity");c3
c4<-Ccf(Pk$Cases,Pk$PS, main="Pakistan: Cases vs. Surface Pressure");c4
c5<-Ccf(Pk$Cases,Pk$WS10M_MAX, main="Pakistan: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(Pk$Cases,Pk$PRECTOTCORR, main="Pakistan: Cases vs. Precipitation");c6
##Lagged variable
max_temp<-dplyr::lag((Pk$T2M_MAX),n=1)
RH<-dplyr::lag((Pk$RH2M),n=7)
sp<-dplyr::lag((Pk$PS),n=13)
ws<-dplyr::lag((Pk$WS10M_MAX),n=0)
min_temp<-dplyr::lag((Pk$T2M_MIN),n=1)
pk<-data.frame(Pk$Cases,min_temp,Pk$T2M,max_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(pk))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(pk)),size = smp_size)
train<-pk[1:smp_size,]
test <-pk[smp_size+1:nrow(pk),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(Temp=train$Pk.T2M,
              Minimum_Temp=train$min_temp,
              Maximum_Temp=train$max_temp,
              Surface_pressure=train$sp,
              Wind_speed=train$ws,
              Rl_hdty=train$RH
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(Temp=test$Pk.T2M,
               Minimum_Temp=test$min_temp,
               Maximum_Temp=test$max_temp,
               Surface_pressure=test$sp,
               Wind_speed=test$ws,
               Rl_hdty=test$RH
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$Pk.Cases,start=c(2020,56),frequency=365)
casespk<-na_locf(Cases)
ts_info(casespk)
Casestest<-ts(test$Pk.Cases,start=c(2021,325),frequency=365)
##Fitting ARIMAX
m7<-auto.arima(casespk, xreg=xreg)
m7
coeftest(m7)
confint(m7)
##Forecasting with significant factors
fm7<-auto.arima(casespk,xreg=train$min_temp)
fm7
fc7<-forecast(fm7,nrow(test),xreg=test$min_temp)
fc7
accuracy(fc7,Casestest)
f7<-autoplot(casespk,series="Actual")+autolayer(fc7, series="Forecast")+autolayer(fitted(fc7), series="Fitted")+
  theme_bw()+ylab("Confirmed cases")+ggtitle("G: Pakistan");f7


##Sri Lanka
Sl<-read_excel("SAARC_COVID-19_data.xlsx", sheet = "Sri Lanka")
head(Sl)
Slts<-ts(Sl$Cases,start=c(2020,27),frequency=365)
p8<-autoplot(Slts, col="yellow")+ylab("")+theme_bw()+ggtitle("H: Sri Lanka");p8
##Removing 0 values by NA
Sl$Cases[Sl$Cases==0]<-NA
head(Sl)
#ARIMAX Modeling
##Cross-correlation
c1<-Ccf(Sl$Cases,Sl$T2M_MAX, main="Sri Lanka: Cases vs. Max. temperature");c1
c2<-Ccf(Sl$Cases,Sl$T2M_MIN, main="Sri Lanka: Cases vs. Min. temperature");c2
c3<-Ccf(Sl$Cases,Sl$RH2M, main="Sri Lanka: Cases vs. Relative Humidity");c3
c4<-Ccf(Sl$Cases,Sl$PS, main="Sri Lanka: Cases vs. Surface Pressure");c4
c5<-Ccf(Sl$Cases,Sl$WS10M_MAX, main="Sri Lanka: Cases vs. Maximum Wind Speed");c5
c6<-Ccf(Sl$Cases,Sl$PRECTOTCORR, main="Sri Lanka: Cases vs. Precipitation");c6
##Lagged variable
max_temp<-dplyr::lag((Sl$T2M_MAX),n=11)
RH<-dplyr::lag((Sl$RH2M),n=7)
sp<-dplyr::lag((Sl$PS),n=21)
ws<-dplyr::lag((Sl$WS10M),n=1)
min_temp<-dplyr::lag((Sl$T2M_MIN),n=25)
sl<-data.frame(Sl$Cases,min_temp,Sl$T2M,max_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(sl))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(sl)),size = smp_size)
train<-sl[1:smp_size,]
test <-sl[smp_size+1:nrow(sl),]
test<-na.omit(test)
##Create matrix of numeric predictors
xreg <- cbind(Temp=train$Sl.T2M,
              Minimum_Temp=train$min_temp,
              Maximum_Temp=train$max_temp,
              Surface_pressure=train$sp,
              Wind_speed=train$ws,
              Rl_hdty=train$RH
)
##Removing intercept
xreg <- xreg[,-1]
#creating the same for the test data
xreg1 <- cbind(Temp=test$Sl.T2M,
               Minimum_Temp=test$min_temp,
               Maximum_Temp=test$max_temp,
               Surface_pressure=test$sp,
               Wind_speed=test$ws,
               Rl_hdty=test$RH
)
# Remove intercept
xreg1 <- xreg1[,-1]
##Create a time series variable
Cases<-ts(train$Sl.Cases,start=c(2020,27),frequency=365)
casessl<-na_locf(Cases)
ts_info(casessl)
Casestest<-ts(test$Sl.Cases,start=c(2021,322),frequency=365)
##Fitting ARIMAX
m8<-auto.arima(casessl, xreg=xreg)
m8
coeftest(m8)
confint(m8)
##Forecasting with significant factors
fm8<-auto.arima(casessl,xreg=train$RH,lambda=0.3)
fm8
fc8<-forecast(fm8,nrow(test),xreg=test$RH)
fc8
accuracy(fc8,Casestest)
f8<-autoplot(casesne,series="Actual")+autolayer(fc6, series="Forecast")+autolayer(fitted(fc6), series="Fitted")+
  theme_bw()+ylab("")+ggtitle("H: Sri Lanka");f8

grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8,nrow=4,ncol=2)
grid.arrange(f1,f2,f3,f4,f5,f6,f7,f8,ncol=2)

##Boxplot of climate factors
par(mfrow=c(4,2))
b1<-boxplot(Afg$T2M_MAX,Afg$T2M_MIN,Afg$RH2M,Afg$PS,Afg$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            main="A: Afghanistan"
);b1
b2<-boxplot(Bd$T2M_MAX,Bd$T2M_MIN,Bd$RH2M,Bd$PS,Bd$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            main="B: Bangladesh"
);b2
b3<-boxplot(Bh$T2M_MAX,Bh$T2M_MIN,Bh$RH2M,Bh$PS,Bh$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            main="C: Bhutan"
);b3
b4<-boxplot(In$T2M_MAX,In$T2M_MIN,In$RH2M,In$PS,In$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            main="D: India"
);b4
b5<-boxplot(Ma$T2M_MAX,Ma$T2M_MIN,Ma$RH2M,Ma$PS,Ma$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            main="E: Maldives"
);b5
b6<-boxplot(Ne$T2M_MAX,Ne$T2M_MIN,Ne$RH2M,Ne$PS,Ne$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            main="F: Nepal"
);b6
b7<-boxplot(Pk$T2M_MAX,Pk$T2M_MIN,Pk$RH2M,Pk$PS,Pk$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            xlab="Climate variables",
            main="G: Pakistan"
);b7
b8<-boxplot(Sl$T2M_MAX,Sl$T2M_MIN,Sl$RH2M,Sl$PS,Sl$WS10M_MAX,
            horizontal = FALSE,
            names = c("Max. tem","Min. temp","Rel. humidity","S. pressure","Max. w. speed"),
            col=c("red","green","blue","turquoise","tomato"),
            xlab="Climate variables",
            main="H: Sri Lanka"
);b8

b9<-boxplot(Afg$Cases,Bd$Cases,Bh$Cases,,Ma$Cases,Ne$Cases,Pk$Cases,Sl$Cases,
            horizontal = FALSE,
            names = c("Afghanistan","Bangladesh","Bhutan","India","Maldives","Nepal","Pakistan","Sri Lanka"),
            col=c("red","green","blue","turquoise","tomato","yellow","purple","dark red"),
            xlab="Country",
            ylab="Confirmed cases"
);b9
boxplot(In$Cases)
##Combine cross-correlation
par(mfrow=c(4,2))
c1<-Ccf(Afg$Cases,Afg$T2M_MAX, main="Afghanistan: Confirmed Cases vs. Max. temperature");c1
c2<-Ccf(Bd$Cases,Bd$T2M_MAX, main="Bangladesh: Confirmed Cases vs. Max. temperature");c2
c3<-Ccf(Bh$Cases,Bh$RH2M, main="Bhutan: Confirmed Cases vs. Relative Humidity");c3
c4<-Ccf(In$Cases,In$T2M_MAX, main="India: Confirmed Cases vs. Max. temperature");c4
c5<-Ccf(Ma$Cases,Ma$PS, main="Maldives: Confirmed Cases vs. Surface Pressure");c5
c6<-Ccf(Ne$Cases,Ne$T2M_MAX, main="Nepal: Confirmed Cases vs. Max. temperature");c6
c7<-Ccf(Pk$Cases,Pk$T2M_MIN, main="Pakistan: Confirmed Cases vs. Min. temperature");c7
c8<-Ccf(Sl$Cases,Sl$RH2M, main="Sri Lanka: Cases vs. Relative Humidity");c8


#################################################################################
#XGBoost model: Forecasting with significant factors
setwd("D:/SAARC paper")
getwd()
##Required libraries
library(readxl)
library(imputeTS)
library(dplyr)
library(forecast)
library(forecastxgb)
library(ggplot2)
library(gridExtra)
library(TSstudio)
##Afghanistan
Afg<-read_excel("SAARC.xlsx", sheet = "Afghanistan")
head(Afg)
Afg$Cases[Afg$Cases==0]<-NA
head(Afg)
## Lag variable
max_temp<-dplyr::lag((Afg$T2M_MAX),n=0)
sp<-dplyr::lag((Afg$PS),n=28)
min_temp<-dplyr::lag((Afg$T2M_MIN),n=0)
afg<-data.frame(Afg$Cases,min_temp,Afg$T2M,max_temp,sp)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(afg))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(afg)),size = smp_size)
train<-afg[1:smp_size,]
test <-afg[smp_size+1:nrow(afg),]
test<-na.omit(test)
x_train<-data.frame(Minimum_Temp=train$min_temp,
                    Maximum_Temp=train$max_temp)
x_train<-ts(x_train,start=c(2020,55),frequency=365)
y_train<-ts(train$Afg.Cases,start=c(2020,55),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-data.frame(Minimum_Temp=test$min_temp,
                   Maximum_Temp=test$max_temp)
x_test<-ts(x_test,start=c(2021,325),frequency=365)
y_test<-test$Afg.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,325),frequency=365)
xgb<-xgbar(y_train, xreg =x_train,
           nrounds = 10,
           nfolds=10,
           lambda=0.3,
           nrounds_method = "cv",
           trend_method = "none")
xgb
fc<-forecast(xgb, nrow(test),xreg =x_test);fc
accuracy(fc,y_test)
fg1<-autoplot(y_train,series="Actual")+
  autolayer(fc, series="Forecast")+
  autolayer(fitted(fc), series="Fitted")+
  theme_bw()+ylab("Confirmed cases")+ggtitle("A: Afghanistan")
fg1

## Bangladesh
BD<-read_excel("SAARC.xlsx", sheet = "Bangladesh")
head(BD)
BD$Cases[BD$Cases==0]<-NA
head(BD)
## Lag Variabe
max_temp<-dplyr::lag((BD$T2M_MAX),n=4)
RH<-dplyr::lag((BD$RH2M),n=2)
sp<-dplyr::lag((BD$PS),n=28)
ws<-dplyr::lag((BD$WS10M),n=12)
min_temp<-dplyr::lag((BD$T2M_MIN),n=2)
bd<-data.frame(BD$Cases,min_temp,BD$T2M,max_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(bd))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(bd)),size = smp_size)
train<-bd[1:smp_size,]
test <-bd[smp_size+1:nrow(bd),]
test<-na.omit(test)
x_train<-train$max_temp
x_train<-ts(x_train,start=c(2020,67),frequency=365)
y_train<-ts(train$BD.Cases,start=c(2020,67),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-test$max_temp
x_test<-ts(x_test,start=c(2021,337),frequency=365)
y_test<-test$BD.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,337),frequency=365)
xgb2<-xgbar(y_train, xreg =x_train,
            nrounds = 1000,
            nfolds=10,
            lambda=0.2,
            nrounds_method = "cv",
            trend_method = "none" )
xgb2
fc2<-forecast(xgb2, nrow(test),xreg =x_test);fc2
accuracy(fc2,y_test)
fg2<-autoplot(y_train,series="Actual")+
  autolayer(fc2, series="Forecast")+
  autolayer(fitted(fc2), series="Fitted")+
  theme_bw()+ylab("")+ggtitle("B: Bangladesh")
fg2

##Bhutan
Btn<-read_excel("SAARC.xlsx", sheet = "Bhutan")
head(Btn)
Btn$Cases[Btn$Cases==0]<-NA
head(Btn)
## Lag Variable
max_temp<-dplyr::lag((Btn$T2M_MAX),n=10)
RH<-dplyr::lag((Btn$RH2M),n=26)
sp<-dplyr::lag((Btn$PS),n=12)
min_temp<-dplyr::lag((Btn$T2M_MIN),n=9)
btn<-data.frame(Btn$Cases,min_temp,Btn$T2M,max_temp,sp,RH)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(btn))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(btn)),size = smp_size)
train<-btn[1:smp_size,]
test <-btn[smp_size+1:nrow(btn),]
test<-na.omit(test)
x_train<-train$RH
x_train<-ts(x_train,start=c(2020,65),frequency=365)
y_train<-ts(train$Btn.Cases,start=c(2020,65),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-test$RH
x_test<-ts(x_test,start=c(2021,325),frequency=365)
y_test<-test$Btn.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,325),frequency=365)
xgb3<-xgbar(y_train, xreg =x_train,
            nrounds =1000,
            nfold=10,
            lambda=0.1,
            nrounds_method = "cv",
            trend_method = "none" )
xgb3
fc3<-forecast(xgb3, nrow(test),xreg =x_test);fc3
accuracy(fc3,y_test)
fg3<-autoplot(y_train,series="Actual")+
  autolayer(fc3, series="Forecast")+
  autolayer(fitted(fc3), series="Fitted")+
  theme_bw()+ylab("Confirmed cases")+ggtitle("C: Bhutan")
fg3

##India
Ind<-read_excel("SAARC.xlsx", sheet = "India")
head(Ind)
Ind$Cases[Ind$Cases==0]<-NA
head(Ind)
##Lag Variable
max_temp<-dplyr::lag((Ind$T2M_MAX),n=11)
RH<-dplyr::lag((Ind$RH2M),n=1)
sp<-dplyr::lag((Ind$PS),n=9)
ws<-dplyr::lag((Ind$WS10M),n=14)
min_temp<-dplyr::lag((Ind$T2M_MIN),n=3)
ind<-data.frame(Ind$Cases,min_temp,Ind$T2M,max_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(ind))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(ind)),size = smp_size)
train<-ind[1:smp_size,]
test <-ind[smp_size+1:nrow(ind),]
test<-na.omit(test)
x_train<-train$max_temp
x_train<-ts(x_train,start=c(2020,30),frequency=365)
y_train<-ts(train$Ind.Cases,start=c(2020,30),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-test$max_temp
x_test<-ts(x_test,start=c(2021,322),frequency=365)
y_test<-test$Ind.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,322),frequency=365)
xgb4<-xgbar(y_train, xreg =x_train,
            nrounds = 1000,
            nfold=5,
            lambda=0.3,
            nrounds_method = "cv",
            trend_method = "none")
xgb4
fc4<-forecast(xgb4, nrow(test),xreg =x_test);fc4
accuracy(fc4,y_test)
fg4<-autoplot(y_train,series="Actual")+
  autolayer(fc4, series="Forecast")+
  autolayer(fitted(fc4), series="Fitted")+
  theme_bw()+scale_y_continuous(labels = function(x) format(x, scientific = FALSE))+
  ylab("")+ggtitle("D: India")
fg4

## Maldives
Mld<-read_excel("SAARC.xlsx", sheet = "Maldives")
head(Mld)
Mld$Cases[Mld$Cases==0]<-NA
head(Mld)
## Lag Variable
RH<-dplyr::lag((Mld$RH2M),n=17)
sp<-dplyr::lag((Mld$PS),n=9)
ws<-dplyr::lag((Mld$WS10M),n=1)
min_temp<-dplyr::lag((Mld$T2M_MIN),n=3)
mld<-data.frame(Mld$Cases,min_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(mld))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(mld)),size = smp_size)
train<-mld[1:smp_size,]
test <-mld[smp_size+1:nrow(mld),]
test<-na.omit(test)
x_train<-train$sp
x_train<-ts(x_train,start=c(2020,67),frequency=365)
y_train<-ts(train$Mld.Cases,start=c(2020,67),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-test$sp
x_test<-ts(x_test,start=c(2021,325),frequency=365)
y_test<-test$Mld.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,325),frequency=365)
xgb5<-xgbar(y_train, xreg =x_train,
            nrounds = 9,
            nfold=10,
            lambda = 0.4,
            nrounds_method = "cv",
            trend_method = "none" )
xgb5
fc5<-forecast(xgb5, nrow(test),xreg =x_test);fc5
accuracy(fc5,y_test)
fg5<-autoplot(y_train,series="Actual")+
  autolayer(fc5, series="Forecast")+
  autolayer(fitted(fc5), series="Fitted")+
  theme_bw()+ylab("COnfirmed cases")+ggtitle("E: Maldives")
fg5

## Nepal
Npl<-read_excel("SAARC.xlsx", sheet = "Nepal")
head(Npl)
Npl$Cases[Npl$Cases==0]<-NA
head(Npl)
##Lag Variable
max_temp<-dplyr::lag((Npl$T2M_MAX),n=4)
RH<-dplyr::lag((Npl$RH2M),n=1)
sp<-dplyr::lag((Npl$PS),n=17)
ws<-dplyr::lag((Npl$WS10M),n=28)
min_temp<-dplyr::lag((Npl$T2M_MIN),n=1)
npl<-data.frame(Npl$Cases,min_temp,Npl$T2M,max_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(Npl))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(npl)),size = smp_size)
train<-npl[1:smp_size,]
test <-npl[smp_size+1:nrow(npl),]
test<-na.omit(test)
x_train<-train$max_temp
x_train<-ts(x_train,start=c(2020,25),frequency=365)
y_train<-ts(train$Npl.Cases,start=c(2020,25),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-test$max_temp
x_test<-ts(x_test,start=c(2021,322),frequency=365)
y_test<-test$Npl.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,322),frequency=365)
xgb6<-xgbar(y_train, xreg =x_train,
            nrounds = 100,
            nfold=10,
            lambda=0.3,
            nrounds_method = "cv",
            trend_method = "none" )
xgb6
fc6<-forecast(xgb6, nrow(test),xreg =x_test);fc6
accuracy(fc6,y_test)
fg6<-autoplot(y_train,series="Actual")+
  autolayer(fc6, series="Forecast")+
  autolayer(fitted(fc6), series="Fitted")+
  theme_bw()+ylab("")+ggtitle("F: Nepal")
fg6

## Pakistan
Pak<-read_excel("SAARC.xlsx", sheet = "Pakistan")
head(Pak)
Pak$Cases[Pak$Cases==0]<-NA
head(Pak)
##Lag Variable
max_temp<-dplyr::lag((Pak$T2M_MAX),n=1)
RH<-dplyr::lag((Pak$RH2M),n=7)
sp<-dplyr::lag((Pak$PS),n=13)
ws<-dplyr::lag((Pak$WS10M),n=24)
min_temp<-dplyr::lag((Pak$T2M_MIN),n=1)
pak<-data.frame(Pak$Cases,min_temp,Pak$T2M,max_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(pak))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(pak)),size = smp_size)
train<-pak[1:smp_size,]
test <-pak[smp_size+1:nrow(pak),]
test<-na.omit(test)
x_train<-train$min_temp
x_train<-ts(x_train,start=c(2020,56),frequency=365)
y_train<-ts(train$Pak.Cases,start=c(2020,56),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-test$min_temp
x_test<-ts(x_test,start=c(2021,325),frequency=365)
y_test<-test$Pak.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,325),frequency=365)
xgb7<-xgbar(y_train, xreg =x_train,
            nrounds = 9,
            nfold=10,
            lambda=0.1,
            nrounds_method = "cv",
            trend_method = "none" )
xgb7
fc7<-forecast(xgb7, nrow(test),xreg =x_test);fc7
accuracy(fc7,y_test)
fg7<-autoplot(y_train,series="Actual")+
  autolayer(fc7, series="Forecast")+
  autolayer(fitted(fc7), series="Fitted")+
  theme_bw()+ylab("Confirmed cases")+ggtitle("G: Pakistan")
fg7

## Ski Lanka
SLn<-read_excel("SAARC.xlsx", sheet = "Sri Lanka")
head(SLn)
SLn$Cases[SLn$Cases==0]<-NA
head(SLn)
##Lag Variable
max_temp<-dplyr::lag((SLn$T2M_MAX),n=27)
RH<-dplyr::lag((SLn$RH2M),n=7)
sp<-dplyr::lag((SLn$PS),n=21)
ws<-dplyr::lag((SLn$WS10M),n=1)
min_temp<-dplyr::lag((SLn$T2M_MIN),n=25)
sLn<-data.frame(SLn$Cases,min_temp,SLn$T2M,max_temp,sp,RH,ws)
## 90% of the sample size
smp_size<-floor(0.90 * nrow(SLn))
print(smp_size)
## set the seed to make partition reproducible
set.seed(123)
train_ind <-sample(seq_len(nrow(sLn)),size = smp_size)
train<-sLn[1:smp_size,]
test <-sLn[smp_size+1:nrow(sLn),]
test<-na.omit(test)
x_train<-train$RH
x_train<-ts(x_train,start=c(2020,27),frequency=365)
y_train<-ts(train$SLn.Cases,start=c(2020,27),frequency=365)
ts_info(x_train)
y_train<-na_locf(y_train)
x_test<-test$RH
x_test<-ts(x_test,start=c(2021,322),frequency=365)
y_test<-test$SLn.Cases
ts_info(x_test)
y_test<-ts(y_test,start=c(2021,322),frequency=365)
xgb8<-xgbar(y_train, xreg =x_train,
            nrounds = 10,
            nfold=10,
            lambda=0.3,
            nrounds_method = "cv",
            trend_method = "none")
xgb8
fc8<-forecast(xgb8, nrow(test),xreg =x_test);fc8
accuracy(fc8,y_test)
fg8<-autoplot(y_train,series="Actual")+
  autolayer(fc8, series="Forecast")+
  autolayer(fitted(fc8), series="Fitted")+
  theme_bw()+ylab("")+ggtitle("H: Sri Lanka")
fg8
grid.arrange(fg1,fg2,fg3,fg4,fg5,fg6,fg7,fg8, ncol=2)

##Bar graph of the MAPE values of test sets
Country<-c("Afghanistan","Bangladesh","Bhutan","India","Maldives","Nepal","Pakistan","Sri Lanka","Afghanistan","Bangladesh","Bhutan","India","Maldives","Nepal","Pakistan","Sri Lanka")
Model<-c("ARIMAX","ARIMAX","ARIMAX","ARIMAX","ARIMAX","ARIMAX","ARIMAX","ARIMAX","XGBoost","XGBoost","XGBoost","XGBoost","XGBoost","XGBoost","XGBoost","XGBoost")
MAPE<-c(174.58,69.12,112.83,53.04,47.33,52.06,49.28,44.29,148.36,37.49,97.43,52.23,45.54,41.06,53.43,22.68)
MPE<-c(150.74,67.10,11.12,25.21,27.79,8.16,19.41,37.77,123.77,14.35,23.08,23.37,36.69,14.72,9.77,4.45)
MAE<-c(52.29,2771.41,45.05,86826.93,504.62,1554.68,1595.97,299.87,43.18,617.75,45.64,75149.78,502.77,1386.31,1618.25,200.28)
RMSE<-c(80.68,5444.37,73.73,56563.57,980.50,3174.84,2953.21,400.08,67.53,1429.73,74.01,36299.58,978.55,2918.20,3001.52,374.58)
Errorvalue<-data.frame(Country,Model,MAPE,MPE,MAE,RMSE)
fig1<-ggplot(Errorvalue,aes(y=Country,x=MAPE,fill=Model))+
  geom_bar(stat="identity",position = "dodge")+
  scale_fill_manual(values = c("ARIMAX" = "red",
                               "XGBoost" = "dark red"))+theme_set(theme_bw()+theme(legend.position =c(0.9,0.2)))+
  ggtitle("A: Mean Absolute Perrcentage Error")+scale_y_discrete(limits = rev)
fig1

fig2<-ggplot(Errorvalue,aes(y=Country,x=MPE,fill=Model))+
  geom_bar(stat="identity",position = "dodge")+ylab("")+
  scale_fill_manual(values = c("ARIMAX" = "red",
                               "XGBoost" = "dark red"))+theme_set(theme_bw())+theme(legend.position =c(0.9,0.2))+
  ggtitle("B: Mean Perrcentage Error")+scale_y_discrete(limits = rev)
fig2

fig3<-ggplot(Errorvalue,aes(y=Country,x=MAE,fill=Model))+
  geom_bar(stat="identity",position = "dodge")+
  scale_fill_manual(values = c("ARIMAX" = "red",
                               "XGBoost" = "dark red"))+theme_set(theme_bw())+theme(legend.position =c(0.9,0.2))+
  ggtitle("C: Mean Absolute Error")+scale_y_discrete(limits = rev)
fig3

fig4<-ggplot(Errorvalue,aes(y=Country,x=RMSE,fill=Model))+
  geom_bar(stat="identity",position = "dodge")+ylab("")+
  scale_fill_manual(values = c("ARIMAX" = "red",
                               "XGBoost" = "dark red"))+theme_set(theme_bw())+theme(legend.position =c(0.9,0.2))+
  ggtitle("D: Root Mean Square Error")+scale_y_discrete(limits = rev)
fig4

grid.arrange(fig1,fig2,fig3,fig4,ncol=2)
